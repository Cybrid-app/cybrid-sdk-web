version: 2.1

orbs:
  node: circleci/node@5.3.0
  browser-tools: circleci/browser-tools@1.4.8
  cypress: cypress-io/cypress@3.4.0
  codecov: codecov/codecov@4.1.0
  jq: circleci/jq@3.0.1

executors:
  cypress:
    docker:
      - image: cypress/base:22.7.0

jobs:
  publish:
    docker:
      - image: cimg/node:22.8.0
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Update version tag
          command: |
            cd dist/library
            export TAG=$(git describe --tags --abbrev=0)
            contents="$(jq -r --arg tag "$TAG" '.version = $tag' package.json)" && \
            echo "${contents}" > package.json
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/.npmrc
      - run:
          name: Publish library
          command: npm run publish:library

  check-versions:
    docker:
      - image: cimg/node:22.8.0
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Check Persona version
          command: |
            export LATEST=$(curl https://registry.npmjs.org/persona/latest | jq -r '. | .version')
            export CURRENT=$(grep 'PERSONA' -A 1 library/src/shared/constants/constants.ts | grep 'https' | sed 's/.*-v\(.*\).js.*/\1/')
            echo "Current Persona version: $CURRENT"
            echo "Latest Persona version: $LATEST"
            if [[ "$LATEST" == "$CURRENT" ]]; then
              echo "Persona is up to date."
            else
              echo "Error: New Persona version available: $LATEST"
              exit 1
            fi

  deploy-demo:
    docker:
      - image: cimg/node:22.8.0
    steps:
      - run:
          name: Trigger Github workflow
          command: |
            curl -H "Accept: application/vnd.github+json" \
              -H "Authorization: token $github_TOKEN" \
              --request POST \
              --data '{"event_type": "deploy"}' \
              https://api.github.com/repos/Cybrid-app/cybrid-sdk-web/dispatches

workflows:
  web-build-and-test:
    jobs:
      - check-versions
      - node/test:
          name: test
          version: 16.20.0-browsers
          cache-version: v2
          setup:
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - run:
                command: |
                  google-chrome --version
                  chromedriver --version
                name: Check install
          post-steps:
            - codecov/upload
            - run:
                command: npm run lint
                name: Lint
            - run:
                command: npm audit --audit-level=high --omit=dev
                name: Audit
            - run:
                command: npm run package:library
                name: Build library
            - persist_to_workspace:
                root: .
                paths:
                  - dist/library

      - cypress/run:
          name: e2e chromium@101.0.4951.64
          requires:
            - test
          executor: cypress
          post-checkout:
            - attach_workspace:
                at: .
            - run:
                name: Install wget/unzip
                command: |
                  apt update -y
                  apt-get install -y wget
                  apt-get install -y unzip
                  apt-get install -y ca-certificates
            - run:
                name: Download/Install Chromium
                command: |
                  wget -O chrome-linux.zip "https://www.googleapis.com/download/storage/v1/b/chromium-browser-snapshots/o/Linux_x64%2F982481%2Fchrome-linux.zip?generation=1647559751806495&alt=media"
                  unzip chrome-linux.zip
          start: npm start
          command: npx cypress run --browser chrome-linux/chrome
          no-workspace: true
          wait-on: http://localhost:4200
          store_artifacts: true

      - cypress/run:
          name: e2e chromium@102.0.5005.61
          requires:
            - test
          executor: cypress
          post-checkout:
            - attach_workspace:
                at: .
            - run:
                name: Install wget/unzip
                command: |
                  apt update -y
                  apt-get install -y wget
                  apt-get install -y unzip
                  apt-get install -y ca-certificates
            - run:
                name: Download/Install Chromium
                command: |
                  wget -O chrome-linux.zip "https://www.googleapis.com/download/storage/v1/b/chromium-browser-snapshots/o/Linux_x64%2F992740%2Fchrome-linux.zip?generation=1649975445134595&alt=media"
                  unzip chrome-linux.zip
          start: npm start
          command: npx cypress run --browser chrome-linux/chrome
          no-workspace: true
          wait-on: http://localhost:4200
          store_artifacts: true

      - cypress/run:
          name: e2e chrome@latest
          requires:
            - test
          executor: cypress
          post-checkout:
            - attach_workspace:
                at: .
            - run:
                name: Install libraries
                command: |
                  apt update -y
                  apt install -y software-properties-common apt-transport-https wget fonts-liberation xdg-utils gnupg libu2f-udev libvulkan1
            - run:
                name: Download/Install Chrome stable
                command: |
                  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
                  apt update -y
                  dpkg --configure -a
                  dpkg -i google-chrome-stable_current_amd64.deb
          start: npm start
          command: npx cypress run --browser chrome
          wait-on: http://localhost:4200
          store_artifacts: true

      - publish:
          requires:
            - test
            - e2e chromium@101.0.4951.64
            - e2e chromium@102.0.5005.61
            - e2e chrome@latest
          filters:
            branches:
              only:
                - main

      - deploy-demo:
          requires:
            - publish
          filters:
            branches:
              only:
                - main
